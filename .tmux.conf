#原则是尽量和vim一致，减轻记忆负担
set -g prefix C-j #前缀为ctrl+f mac把大小写和control系统级调换（设置中改）后，这个键左右手很舒服。
unbind C-b # C-b即Ctrl+b键，unbind意味着解除绑定
bind C-j send-prefix # 绑定Ctrl+j为新的指令前缀

unbind '"'
bind s splitw -v -c '#{pane_current_path}' # 垂直方向新增面板，默认进入当前目录
unbind %
bind v splitw -h -c '#{pane_current_path}' # 水平方向新增面板，默认进入当前目录

set-option -g mouse on #鼠标全局支持
set-window-option -g aggressive-resize on # 自动重调大小


# 绑定hjkl键为面板切换的上下左右键
bind -r k select-pane -U # 绑定k为↑
bind -r j select-pane -D # 绑定j为↓
bind -r h select-pane -L # 绑定h为←
bind -r l select-pane -R # 绑定l为→

set -g default-command "reattach-to-user-namespace -l $SHELL" #安装reattach-to-user-namespace保证mac命令生效

set -g base-index 1 # 设置窗口的起始下标为1
set -g pane-base-index 1 # 设置面板的起始下标为1

# 状态栏
set -g status-interval 10 # 状态栏刷新时间 单位秒
set -g status-justify left # 状态栏列表左对齐
setw -g monitor-activity on # 非当前窗口有内容更新时在状态栏通知

set -g status-bg black # 设置状态栏背景黑色
set -g status-fg yellow # 设置状态栏前景黄色
set -g status-style "bg=black, fg=yellow" # 状态栏前景背景色

set -g status-left "#[bg=#FF661D]#S " # 状态栏左侧内容
#set -g status-right 'Continuum status: #{continuum_status}' # 状态栏右侧内容
set -g status-right '#{prefix_highlight}|#{network_bandwidth}|%Y/%m/%d %H:%M:%S|#(bash ~/.tmux/uptime.sh)|#{continuum_status}' #
# 状态栏右侧内容:是否按下prefix键, uptime, 显示多长时间保存一次。值为数字或者off.
set -g status-left-length 20 # 状态栏左边长度300
set -g status-right-length 100 # 状态栏右边长度500

set -wg window-status-format " #I #W " # 状态栏窗口名称格式
set -wg window-status-current-format " #I:#W#F " # 状态栏当前窗口名称格式(#I：序号，#w：窗口名称，#F：间隔符)
set -wg window-status-separator "" # 状态栏窗口名称之间的间隔
set -wg window-status-current-style "bg=red" # 状态栏当前窗口名称的样式
set -wg window-status-last-style "fg=red" # 状态栏最后一个窗口名称的样式

set -g message-style "bg=#202529, fg=#91A8BA" # 指定消息通知的前景、后景色
# 状态栏End

set -g default-terminal "screen-256color" # 支持256色

#Mac 复制相关
 #buffer缓存复制到Mac系统粘贴板
bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
 #Mac系统粘贴板内容复制到会话
bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - \; paste-buffer -d"
 #绑定y键为复制选中文本到Mac系统粘贴板
bind-key -T copy-mode-vi 'y' send-keys -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
 #鼠标拖动选中文本，并复制到Mac系统粘贴板
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "pbcopy"
#Mac 复制相关End

bind r source-file ~/.tmux.conf \; display-message "Config reloaded.." #重载配置快捷:

#复制模式
setw -g mode-keys vi # 开启vi风格后，支持vi的C-d、C-u、hjkl等快捷键
bind Escape copy-mode # 绑定esc键为进入复制模式
bind -T copy-mode-vi v send-keys -X begin-selection # 绑定v键为开始选择文本
bind -T copy-mode-vi y send-keys -X copy-selection-and-cancel # 绑定y键为复制选中文本
bind p pasteb # 绑定p键为粘贴文本（p键默认用于进入上一个窗口，不建议覆盖）
#复制模式End

# 关掉自动rename
setw -g automatic-rename off
setw -g allow-rename off


# 真彩色
#set -g default-terminal "tmux-256color"
#set -ga terminal-overrides ",*256col*:Tc"
# 会混乱

#配合vim vim-tmux-focus-events 插件实现文件更新后自动重载
set -g focus-events on

# TPM 要求放在配置最后
# 默认需要引入的插件
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# 引入其他插件
set -g @plugin 'tmux-plugins/tmux-prefix-highlight'  #显示是否按下prefix键
set -g @plugin 'xamut/tmux-network-bandwidth'  #显示网速
set -g @prefix_highlight_fg 'white'

# #自动备份和恢复插件
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @continuum-save-interval '30'
set -g @continuum-restore 'on' # 启用自动恢复
set -g @continuum-boot 'on' # mac 重启时启用tmux
set -g @continuum-boot-options 'iterm' # mac 重启时在iterm2中启用tmux

# 初始化tmux插件管理器(保证这行在~/.tmux.conf的非常靠后的位置)
run '~/.tmux/plugins/tpm/tpm'

# Fig Tmux Integration: Enabled
source-file ~/.fig/tmux
# End of Fig Tmux Integration
